// src/components/features/company/MobileCompanyNav/MobileCompanyNav.jsx
import React, { useCallback } from 'react';
import PropTypes from 'prop-types';
import { companyData } from '../../../../data/companies';
import { projectsByCompany } from '../../../../data/projects';
import { trackEvent, EVENT_CATEGORIES, EVENT_ACTIONS } from '../../../../services/analytics';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {string} props.company - ID –∫–æ–º–ø–∞–Ω–∏–∏
 * @param {string} props.activeCase - ID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–µ–π—Å–∞
 * @param {Function} props.selectCase - –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∫–µ–π—Å–∞
 * @param {Function} props.backToCompanyCard - –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏
 * @param {Function} props.setShowContactModal - –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
 * @returns {JSX.Element} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
 */
const MobileCompanyNav = ({
  company,
  activeCase,
  selectCase,
  backToCompanyCard,
  setShowContactModal
}) => {
  const companyInfo = companyData[company];
  const companyProjects = projectsByCompany[company] || [];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏
  const handleBackToCompany = useCallback(() => {
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤–æ–∑–≤—Ä–∞—Ç –∫ –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
    trackEvent(
      EVENT_CATEGORIES.NAVIGATION,
      'back_to_company_header',
      `from_${activeCase}_to_${company}`
    );
    
    backToCompanyCard();
  }, [backToCompanyCard, activeCase, company]);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
  const handleProjectSelect = useCallback((projectId) => {
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø—Ä–æ–µ–∫—Ç–∞–º–∏
    trackEvent(
      EVENT_CATEGORIES.NAVIGATION,
      EVENT_ACTIONS.PROJECT_SELECT,
      `mobile_nav_switch_from_${activeCase}_to_${projectId}`
    );
    
    selectCase(projectId);
  }, [selectCase, activeCase]);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
  const handleOpenContacts = useCallback(() => {
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "Other"
    trackEvent(
      EVENT_CATEGORIES.UI_INTERACTION,
      EVENT_ACTIONS.CONTACT_OPEN,
      `mobile_nav_other_${company}`
    );
    
    setShowContactModal(true);
  }, [setShowContactModal, company]);

  return (
    <div 
      className="card-glassmorphism rounded-t-3xl shadow-sm overflow-hidden transform-card-transition"
      style={{ 
        minHeight: '100px',
        position: 'relative',
        zIndex: 30,
        marginTop: '-50px',
        paddingTop: '30px'
      }}
    >
      {/* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å —Ç–∞–±–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
      <div 
        className="overflow-x-auto custom-scrollbar scrollbar-hide pb-4 horizontal-scroll" 
        style={{ 
          WebkitOverflowScrolling: 'touch', 
          paddingTop: '30px',
          paddingBottom: '12px'
        }}
      >
        <div className="flex space-x-1 px-4 pb-3 min-w-max">
          {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –∫–æ–º–ø–∞–Ω–∏–∏" */}
          <button
            onClick={handleBackToCompany}
            className="border-gray-200 dark:border-gray-700 bg-gray-100 dark:bg-gray-700 text-black dark:text-white" 
            style={{
              display: 'flex',
              padding: '8px 20px',
              flexDirection: 'row',
              alignItems: 'center',
              gap: '4px',
              borderRadius: '9999px',
              border: '1px solid var(--color-button-border)',
              background: 'transparent',
              fontSize: '14px',
              fontWeight: '600',
              width: 'auto'
            }}
          >
            ‚¨ÖÔ∏è To {companyInfo.name}
          </button>
          
          {/* –ö–Ω–æ–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ (–∫—Ä–æ–º–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ) */}
          {companyProjects.map((project) => {
            // –ù–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
            if (activeCase === project.id) return null;
            
            return (
              <button
                key={project.id}
                onClick={() => handleProjectSelect(project.id)}
                className="border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 text-black dark:text-white"
                style={{
                  display: 'flex',
                  padding: '8px 20px',
                  flexDirection: 'row',
                  alignItems: 'center',
                  gap: '4px',
                  borderRadius: '9999px',
                  border: '1px solid var(--color-button-border)',
                  fontSize: '14px',
                  fontWeight: '600',
                  width: 'auto'
                }}
              >
                {project.shortName}
              </button>
            );
          })}
          
          {/* –ö–Ω–æ–ø–∫–∞ "Other" */}
          <button
            onClick={handleOpenContacts}
            className="border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 text-black dark:text-white"
            style={{
              display: 'flex',
              padding: '8px 20px',
              flexDirection: 'row',
              alignItems: 'center',
              gap: '4px',
              borderRadius: '9999px',
              border: '1px solid var(--color-button-border)',
              fontSize: '14px',
              fontWeight: '600',
              width: 'auto'
            }}
          >
            üîç Other
          </button>
        </div>
      </div>
    </div>
  );
};

MobileCompanyNav.propTypes = {
  company: PropTypes.string.isRequired,
  activeCase: PropTypes.string,
  selectCase: PropTypes.func.isRequired,
  backToCompanyCard: PropTypes.func.isRequired,
  setShowContactModal: PropTypes.func.isRequired
};

export default React.memo(MobileCompanyNav);