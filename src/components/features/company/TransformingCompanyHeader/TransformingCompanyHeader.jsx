// src/components/common/TransformingCompanyHeader.jsx
import React, { useEffect, useRef } from 'react';
import { companyData } from '../../../../data/companies';
import { projectsByCompany } from '../../../../data/projects';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
const TransformingCompanyHeader = ({
  company,
  activeCase,
  selectCase,
  closeSidebar,
  backToCompanyCard,
  setShowContactModal,
  isTransformed,
  isMobile,
  maxHeight,
  onHeightChange
}) => {

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
  const companyInfo = companyData[company];
  
  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏
  const companyProjects = projectsByCompany[company] || [];

  // Ref –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã –∫–∞—Ä—Ç–æ—á–∫–∏ (–¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
  const cardRef = useRef(null);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
  const getCompanyImage = (companyId) => {
    const imageMap = {
      'gmx': '/assets/images/GMX.webp',
      'nexus': '/assets/images/Nexus.webp',
      'p2p': '/assets/images/KeyApp.webp',
      'wildberries': '/assets/images/Wb.webp'
    };
    
    return imageMap[companyId] || '/api/placeholder/400/250'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
  };

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º ResizeObserver –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã—Å–æ—Ç—ã (–¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
  useEffect(() => {
    if (!cardRef.current || isMobile || !onHeightChange) return;
    
    const observer = new ResizeObserver((entries) => {
      const height = entries[0].contentRect.height;
      onHeightChange(height);
    });
    
    observer.observe(cardRef.current);
    return () => observer.disconnect();
  }, [isMobile, onHeightChange]);

  // –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ä–∞—Å—á—ë—Ç –≤—ã—Å–æ—Ç—ã –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–æ–π –æ–±–ª–∞—Å—Ç–∏
  const contentHeight = maxHeight
    ? `calc(${typeof maxHeight === 'string' ? maxHeight : maxHeight + 'px'} - 260px)`
    : `calc(100vh - 260px)`;

  // –ï—Å–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∏—á–µ–≥–æ
  if (!company || !companyInfo) {
    console.log("üîç TransformingCompanyHeader: –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º");
    return null;
  }

  // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–∞–±–∞–º–∏)
  if (isTransformed) {
    console.log("üîç TransformingCompanyHeader: —Ä–µ–Ω–¥–µ—Ä–∏–º –ö–û–ú–ü–ê–ö–¢–ù–´–ô —Ä–µ–∂–∏–º");
    return (
      <div 
        className="bg-white rounded-t-3xl shadow-sm border border-gray-200 overflow-hidden transform-card-transition"
        style={{ 
          minHeight: '60px',  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
          position: 'relative',
          zIndex: 30  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º z-index, —á—Ç–æ–±—ã –±—ã—Ç—å –≤—ã—à–µ ProjectDetails
        }}
      >
        <div className="p-4 flex items-center justify-between">
          {/* –°—Ç—Ä–µ–ª–∫–∞ –≤–≤–µ—Ä—Ö (–°–õ–ï–í–ê) - –≤–æ–∑–≤—Ä–∞—Ç –∫ –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ */}
          <button
            onClick={() => {
              console.log("üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å—Ç—Ä–µ–ª–∫–∏ –≤–≤–µ—Ä—Ö –≤ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ");
              backToCompanyCard();
            }}
            className="h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center"
            aria-label="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–ø–∞–Ω–∏–∏"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#666"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
              aria-hidden="true"
            >
              <path d="M18 15l-6-6-6 6"/>
            </svg>
          </button>

          {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
          <div className="text-base font-medium text-center flex-grow">
            {activeCase && companyProjects.find(p => p.id === activeCase)?.shortName}
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (–°–ü–†–ê–í–ê) - –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–±–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
          <button
            onClick={() => {
              console.log("üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (X) –≤ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ");
              closeSidebar(); // –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–±–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            }}
            className="h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#666"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
              aria-hidden="true"
            >
              <line x1="18" y1="6" x2="6" y2="18"></line>
              <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
          </button>
        </div>

        {/* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å —Ç–∞–±–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
        <div 
          className="overflow-x-auto custom-scrollbar scrollbar-hide pb-3 horizontal-scroll" 
          style={{ WebkitOverflowScrolling: 'touch' }}
        >
          <div className="flex space-x-2 px-4 pb-3 min-w-max">
            {companyProjects.map((project) => (
              <button
                key={project.id}
                onClick={() => {
                  console.log(`üîç –ù–∞–∂–∞—Ç —Ç–∞–± –ø—Ä–æ–µ–∫—Ç–∞: ${project.shortName} (${project.id})`);
                  selectCase(project.id);
                }}
                className={`px-3 py-1 text-sm rounded-full whitespace-nowrap ${
                  activeCase === project.id
                    ? 'bg-blue-100 text-blue-700'
                    : 'bg-gray-100 hover:bg-gray-200 text-gray-600'
                }`}
              >
                {project.shortName}
              </button>
            ))}
            <button
              onClick={() => {
                console.log("üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ 'Other' –≤ —Ç–∞–±–∞—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤");
                setShowContactModal(true);
              }}
              className="px-3 py-1 text-sm rounded-full whitespace-nowrap bg-gray-100 hover:bg-gray-200 text-gray-600"
            >
              Other
            </button>
          </div>
        </div>
      </div>
    );
  }

  // –ü–æ–ª–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ (–Ω–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–∏–¥)
  console.log("üîç TransformingCompanyHeader: —Ä–µ–Ω–¥–µ—Ä–∏–º –ü–û–õ–ù–´–ô —Ä–µ–∂–∏–º");
  return (
    <div
      ref={cardRef}
      className="bg-white rounded-3xl shadow-sm border border-gray-200 relative overflow-hidden transform-card-transition"
      style={{
        height: '100%',
        maxHeight: maxHeight || (isMobile ? 'calc(100vh - 140px)' : 'none'),
        zIndex: isMobile ? 10 : 'auto',
      }}
    >
      {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="sticky top-0 z-10 bg-white p-6 pb-4 border-b border-gray-50">
        <button
          onClick={() => {
            console.log("üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (X) –≤ –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏");
            closeSidebar();
          }}
          className="absolute top-3 right-3 h-6 w-6 rounded-full bg-gray-100 flex items-center justify-center z-40"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="12"
            height="12"
            viewBox="0 0 24 24"
            fill="none"
            stroke="#666"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>

        <img
          src={getCompanyImage(company)}
          alt={companyInfo.name}
          className="w-full h-auto rounded-xl mb-4"
        />
        <h2 className="text-2xl font-semibold mb-2 text-left">{companyInfo.name}</h2>
      </div>

      {/* –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º minHeight */}
      <div
        className="p-6 pt-2 overflow-y-auto custom-scrollbar"
        style={{ maxHeight: contentHeight, minHeight: '150px' }}
      >
        <p className="text-base text-gray-600 mb-4 text-left">
          {companyInfo.description}
        </p>

        <div className="mb-6">
          <h3 className="text-sm font-medium text-gray-500 mb-2 text-left">Key Projects</h3>
          <div className="flex flex-wrap gap-2">
            {companyProjects.map((project) => (
              <button
                key={project.id || project.title}
                onClick={() => {
                  console.log(`üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: ${project.shortName || project.id}`);
                  selectCase(
                    project.id || project.title.toLowerCase().replace(/\s+/g, '')
                  );
                }}
                className={`px-3 py-1 text-sm rounded-full ${
                  activeCase ===
                  (project.id || project.title.toLowerCase().replace(/\s+/g, ''))
                    ? 'bg-blue-100 text-blue-700'
                    : 'bg-gray-100 hover:bg-gray-200 text-gray-600'
                }`}
              >
                {project.shortName || project.id}
              </button>
            ))}
            <button
              onClick={() => {
                console.log("üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ 'Other' –≤ –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏");
                setShowContactModal(true);
              }}
              className="px-3 py-1 text-sm rounded-full bg-gray-100 hover:bg-gray-200 text-gray-600"
            >
              Other
            </button>
          </div>
        </div>

        <div className="mb-6">
          <h3 className="text-sm font-medium text-gray-500 mb-2 text-left">Tags</h3>
          <div className="flex flex-wrap gap-2">
            {companyInfo.tags && companyInfo.tags.map((tag, index) => (
              <span key={index} className="px-2 py-1 text-xs rounded bg-blue-50 text-blue-600">
                {tag}
              </span>
            ))}
          </div>
        </div>

        <div className="pt-4 border-t border-gray-100 flex flex-col space-y-2">
          {company === 'nexus' ? (
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è Nexus Network
            <button
              onClick={() => {
                console.log("üîç –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ 'Contact about'");
                setShowContactModal(true);
              }}
              className="text-sm text-blue-600 hover:text-blue-800 flex items-center"
            >
              <span>Contact about {companyInfo.name}</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="ml-1"
              >
                <line x1="7" y1="17" x2="17" y2="7"></line>
                <polyline points="7 7 17 7 17 17"></polyline>
              </svg>
            </button>
          ) : (
            // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π - –æ–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞
            <a
              href={companyInfo.url}
              target="_blank"
              rel="noopener noreferrer"
              className="text-sm text-blue-600 hover:text-blue-800 flex items-center"
            >
              <span>Visit {companyInfo.name}</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="ml-1"
              >
                <line x1="7" y1="17" x2="17" y2="7"></line>
                <polyline points="7 7 17 7 17 17"></polyline>
              </svg>
            </a>
          )}

          {companyInfo.keyAppUrl && (
            <a
              href={companyInfo.keyAppUrl}
              target="_blank"
              rel="noopener noreferrer"
              className="text-sm text-blue-600 hover:text-blue-800 flex items-center"
            >
              <span>Download Key App</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
                className="ml-1"
              >
                <line x1="7" y1="17" x2="17" y2="7"></line>
                <polyline points="7 7 17 7 17 17"></polyline>
              </svg>
            </a>
          )}
        </div>
      </div>
    </div>
  );
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ props —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
TransformingCompanyHeader.defaultProps = {
  onHeightChange: () => {} // –ü—É—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
};

export default TransformingCompanyHeader;