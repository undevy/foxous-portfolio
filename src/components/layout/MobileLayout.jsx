import React, { useEffect } from 'react';
import Footer from '../common/Footer';
import ProjectDetails from '../company/ProjectDetails';
import TransformingCompanyHeader from '../common/TransformingCompanyHeader';

const MobileLayout = ({
  activeCompany,
  activeCase,
  isOpen,
  isCompanyCardTransformed,
  toggleCompany,
  selectCase,
  closeSidebar,
  backToCompanyCard,
  closeProjectDetails,
  setShowContactModal,
}) => {
  // –î–æ–±–∞–≤–∏–º –ª–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  useEffect(() => {
    console.log("üîç MobileLayout —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø—Ä–æ–ø—Å–∞–º–∏:");
    console.log("üîç activeCompany:", activeCompany);
    console.log("üîç activeCase:", activeCase);
    console.log("üîç isOpen:", isOpen);
    console.log("üîç isCompanyCardTransformed:", isCompanyCardTransformed);
  }, [activeCompany, activeCase, isOpen, isCompanyCardTransformed]);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useMemo –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—ã—á–∏—Å–ª—è–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  const footerComponent = React.useMemo(() => (
    <Footer activeCompany={activeCompany} toggleCompany={toggleCompany} isMobile={true} />
  ), [activeCompany, toggleCompany]);

  return (
    <>
      {/* –§—É—Ç–µ—Ä –≤–≤–µ—Ä—Ö—É (—à–∞–ø–∫–∞ –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏) */}
      <div className="fixed top-0 left-0 right-0 z-50 px-4 py-2">
        <div className="mx-auto" style={{ maxWidth: '1048px' }}>
          {footerComponent}
        </div>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="pt-20 px-4 pb-4">
        {isOpen && activeCompany && (
          <div className="relative">
            {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è TransformingCompanyHeader */}
            <div 
              className="relative z-30" 
              style={{ 
                marginBottom: isCompanyCardTransformed ? '2px' : '0'
              }}
            >
              <TransformingCompanyHeader
                company={activeCompany}
                activeCase={activeCase}
                selectCase={selectCase}
                closeSidebar={closeSidebar}
                backToCompanyCard={backToCompanyCard}
                setShowContactModal={setShowContactModal}
                isTransformed={isCompanyCardTransformed}
                isMobile={true}
                maxHeight={'calc(100dvh - 160px)'}
                onHeightChange={() => {
                  console.log("üîç onHeightChange –≤—ã–∑–≤–∞–Ω –≤ TransformingCompanyHeader");
                }}
              />
            </div>

            {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è ProjectDetails */}
            {activeCase && (
              <div
                className="relative z-20"
                style={{
                  boxShadow: 'none', // –£–±–∏—Ä–∞–µ–º —Ç–µ–Ω—å
                }}
              >
                <ProjectDetails
                  activeCase={activeCase}
                  handleCloseDetail={backToCompanyCard}
                  isMobile={true}
                  maxHeight="min(60dvh, calc(100dvh - 260px))"
                  hideCloseButton={true} // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
                  squareTopCorners={true} // –ü—Ä—è–º—ã–µ –≤–µ—Ä—Ö–Ω–∏–µ —É–≥–ª—ã
                />
              </div>
            )}
          </div>
        )}
      </div>
    </>
  );
};

export default React.memo(MobileLayout);